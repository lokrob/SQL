CREATE TABLE superstore (
    item_id INTEGER PRIMARY KEY,
    item_name TEXT,
    category TEXT,
    price DECIMAL(10, 2),
    stock_quantity INTEGER,
    average_rating DECIMAL(3, 2)
);

INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
VALUES
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),
    (12, 'Wireless Earbuds', 'Electronics', 49.99, 75, 4.3),
    (13, 'Slow Cooker', 'Appliances', 49.95, 30, 4.7),
    (14, 'Cutlery Set', 'Kitchen Supplies', 34.50, 40, 4.4),
    (15, 'Cozy Throw Blanket', 'Furnishings', 24.99, 100, 4.2);

-- Â© Copyright 2025 Break Into Tech  --


#For this project, I used SQL to query the Superstore database from the prompt above to get information about items sold at the store and their prices. 

-- 1. Write a SQL query that orders the items by price

SELECT item_name, price
FROM superstore
ORDER BY price
;
-- What this code does is retrieve all items ordered by price in ascending order.
-- Sorting helps with price comparisons and can be useful for quickly identifying low cost or high cost products.


-- 2. Write your own SQL query that will show a statistic about the item prices, like a sum, average, minimum, maximum, or count.

SELECT SUM(price), AVG(price), MIN(price), MAX(price), COUNT(price)
FROM superstore
;
-- What this code does is compute descriptive statistics for item prices across the store.
-- Includes summation, average, minimum, maximum, and count to provide info of the overall pricing distributions in the data set.


-- 3. Write your own SQL query that will show a statistic about the price for items in the category of "Kitchen Supplies".

SELECT SUM(price), AVG(price), MIN(price), MAX(price), COUNT(price)
FROM superstore
WHERE category = 'Kitchen Supplies'
;
-- What this code does is compute the same statistics as #3 but more narrowed down to the "Kitchen Supplies" category.
-- Demonstrates the ability to use filters to narrow down and analyze a category specific revenue or pricing trend.


-- 4. How many air purifiers are in stock?

SELECT item_name, stock_quantity
FROM superstore
WHERE item_name = 'Air Purifier'
;
-- What this code does is find the stock availibility for air purifiers and helps with inventory management.
